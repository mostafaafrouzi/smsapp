name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

<<<<<<< HEAD
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Prepare Android SDK (licenses + packages)
        shell: bash
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

    - name: Install Android SDK components
      run: |
        sdkmanager --install \
          "platform-tools" \
          "platforms;android-34" \
          "build-tools;34.0.0"

    - name: Make Gradle wrapper executable
      run: chmod +x gradlew

    - name: Build (Debug + Release)
      run: ./gradlew --no-daemon --stacktrace assembleDebug assembleRelease

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

    - name: Upload Release APK (unsigned)
      uses: actions/upload-artifact@v4
      with:
        name: app-release-unsigned
        path: app/build/outputs/apk/release/app-release-unsigned.apk

    - name: Check signing secrets
      id: signing
      shell: bash
      run: |
        if [[ -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" && -n "${{ secrets.SIGNING_KEY_ALIAS }}" && -n "${{ secrets.SIGNING_KEY_PASSWORD }}" && -n "${{ secrets.SIGNING_STORE_PASSWORD }}" ]]; then
          echo "available=true" >> "$GITHUB_OUTPUT"
        else
          echo "available=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Decode keystore
      if: steps.signing.outputs.available == 'true'
      run: |
        echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

    - name: Align and sign Release APK
      if: steps.signing.outputs.available == 'true'
      run: |
        zipalign -p -f 4 app/build/outputs/apk/release/app-release-unsigned.apk app-release-aligned.apk
        apksigner sign \
          --ks keystore.jks \
          --ks-key-alias "${{ secrets.SIGNING_KEY_ALIAS }}" \
          --ks-pass pass:${{ secrets.SIGNING_STORE_PASSWORD }} \
          --key-pass pass:${{ secrets.SIGNING_KEY_PASSWORD }} \
          --out app-release-signed.apk \
          app-release-aligned.apk
        apksigner verify --print-certs app-release-signed.apk

    - name: Upload Signed Release APK
      if: steps.signing.outputs.available == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: app-release-signed
        path: app-release-signed.apk

    - name: Summary
      shell: bash
      run: |
        echo "# Build summary" >> "$GITHUB_STEP_SUMMARY"
        echo "- JDK: 17 (Temurin)" >> "$GITHUB_STEP_SUMMARY"
        echo "- SDK: platform android-34, build-tools 34.0.0" >> "$GITHUB_STEP_SUMMARY"
        echo "- Artifacts: app-debug.apk, app-release-unsigned.apk" >> "$GITHUB_STEP_SUMMARY"
        if [[ "${{ steps.signing.outputs.available }}" == "true" ]]; then
          echo "- Signing: Enabled â†’ app-release-signed.apk uploaded" >> "$GITHUB_STEP_SUMMARY"
        else
          echo "- Signing: Skipped (missing secrets)" >> "$GITHUB_STEP_SUMMARY"
        fi
